version: "3.9"

volumes:
  hash-graph-data:

services:
  postgres:
    image: postgres:14-alpine
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      HASH_GRAPH_PG_USER: "${HASH_GRAPH_PG_USER}"
      HASH_GRAPH_PG_PASSWORD: "${HASH_GRAPH_PG_PASSWORD}"
      HASH_GRAPH_PG_DATABASE: "${HASH_GRAPH_PG_DATABASE}"
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - hash-graph-data:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgres/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    tmpfs:
      - /tmp
      - /run/postgresql
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    security_opt:
      - no-new-privileges:true
    read_only: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username ${POSTGRES_USER}"]
      interval: 2s
      timeout: 1s
      retries: 5

  migrate:
    build:
      context: ..
      dockerfile: deployment/migrations/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      HASH_GRAPH_PG_MIGRATION_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${HASH_GRAPH_PG_DATABASE}"
