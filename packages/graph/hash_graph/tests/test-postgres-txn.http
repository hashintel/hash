// This shout be executed first
// Expects rest-test.http to have been run first.
### Insert entity
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json

{
  "ownedById": "00000000-0000-0000-0000-000000000000",
  "actorId": "00000000-0000-0000-0000-000000000000",
  "entity": {
    "http://localhost:3000/@alice/types/property-type/name/": "Testing with some name"
  },
  "entityTypeId": "http://localhost:3000/@alice/types/entity-type/person/v/1"
}

> {%
    client.test("status", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.global.set("entity_id", encodeURIComponent(response.body.identifier.entityId));
%}

// The following two should be run at the same time, but
// This following request should be run first
#### Update some entity
PUT http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json

{
 "actorId": "00000000-0000-0000-0000-000000000000",
 "entityId": "{{entity_id}}",
 "entityTypeId": "https://blockprotocol.org/@blockprotocol/types/entity-type/link/v/1",
 "entity": {
   "http://localhost:3000/@alice/types/property-type/name/": "update anything"
 }
}
// then this, both should halt for 10 seconds.
### Archive an entity
POST http://127.0.0.1:4000/entities/archive
Content-Type: application/json
Accept: application/json

{
  "entityId": "{{entity_id}}",
  "ownedById": "00000000-0000-0000-0000-000000000000",
  "actorId": "00000000-0000-0000-0000-000000000000"
}

> {%
    client.test("status", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}
