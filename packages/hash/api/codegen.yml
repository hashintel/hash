overwrite: true
schema: ./src/graphql/typeDefs/**/*.ts
require:
  - ts-node/register
generates:
  ./src/graphql/graphqlSchema.gen.json:
    plugins:
      - "introspection"
    config:
      noSchemaStitching: true
  ./src/graphql/apiTypes.gen.ts:
    documents:
      - ../shared/src/queries/**/*.ts
    hooks:
      afterOneFileWrite:
        - prettier --write
    plugins:
      - "typescript"
      - "typescript-resolvers"
      - "typescript-operations"
    config:
      avoidOptionals:
        defaultValue: true
      noSchemaStitching: true
      skipTypename: true
      scalars:
        Date: string
        UnknownEntityProperties: "@hashintel/hash-shared/graphql/types#UnknownEntityProperties"
        TextToken: "@hashintel/hash-shared/graphql/types#TextToken"
        DataType: "@blockprotocol/type-system-web#DataType"
        DataTypeWithoutId: "@hashintel/hash-shared/graphql/types#DataTypeWithoutId"
        DataTypeWithMetadata: "@hashintel/subgraph/types#DataTypeWithMetadata"
        EntityType: "@blockprotocol/type-system-web#EntityType"
        EntityTypeWithoutId: "@hashintel/hash-shared/graphql/types#EntityTypeWithoutId"
        EntityTypeWithMetadata: "@hashintel/subgraph/types#EntityTypeWithMetadata"
        PropertyType: "@blockprotocol/type-system-web#PropertyType"
        PropertyTypeWithoutId: "@hashintel/hash-shared/graphql/types#PropertyTypeWithoutId"
        PropertyTypeWithMetadata: "@hashintel/subgraph/types#PropertyTypeWithMetadata"
        Edges: "@hashintel/hash-shared/graphql/types#Edges"
        Vertices: "@hashintel/hash-shared/graphql/types#Vertices"
