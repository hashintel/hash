version: "3.9"
services:
  hash-dev-opensearch:
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../../../.env
      - ../../../.env.local
    environment:
      ## Tell OpenSearch that it's operating in single-node mode
      - discovery.type=single-node
      ## Disable the security module for development so we can connect over plain HTTP
      - plugins.security.disabled=true
      ## Docker volumes are ~10GB by default which is typically much smaller than the
      ## host's drive size. This can cause OpenSearch to shutdown if it thinks disk
      ## space is running low. Set the disk high watermark to 100% to ignore this.
      - cluster.routing.allocation.disk.watermark.high=100%
      - cluster.routing.allocation.disk.watermark.flood_stage=100%
    build:
      context: ./opensearch
    ports:
      - 9200:9200
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    ## Mouting open search data to a local directory may lead to java.nio.file.AccessDeniedException.
    ## Details: https://github.com/opensearch-project/OpenSearch/issues/1579.
    ## We can revisit the setup after upgrading base image or by fixing permissions in a custom image.
    # volumes:
    #   - ../../../var/external-services/opensearch/data:/usr/share/opensearch/data

  postgres:
    image: postgres:14-alpine
    deploy:
      restart_policy:
        condition: on-failure
    env_file:
      - ../../../.env
      - ../../../.env.local
    environment:
      - PGDATA=/data/pgdata
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ../../../var/external-services/postgres/data:/data
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgres/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
  hash-dev-redis:
    deploy:
      restart_policy:
        condition: on-failure
    image: redis:6.2
    ports:
      - 6379:6379
  kratos-migrate:
    depends_on:
      - postgres
    image: oryd/kratos:v0.10.1
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${HASH_KRATOS_PG_DATABASE}
    command: -c /etc/config/kratos/kratos.dev.yml migrate sql -e --yes
  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v0.10.1
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    restart: unless-stopped
    environment:
      - SECRETS_COOKIE=VERY-INSECURE-AND-SHOULD-ONLY-BE-USED-IN-DEV
      - SECRETS_CIPHER=32-LONG-SECRET-NOT-SECURE-AT-ALL
      - COURIER_SMTP_CONNECTION_URI=smtps://test:test@mailslurper:1025/?skip_ssl_verify=true
      - DSN=postgres://${HASH_KRATOS_PG_USER}:${HASH_KRATOS_PG_PASSWORD}@postgres:${POSTGRES_PORT}/${HASH_KRATOS_PG_DATABASE}
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.dev.yml --dev --watch-courier
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - "4436:4436"
      - "4437:4437"
