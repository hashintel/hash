[workspace]
members = [".", "macros"]
default-members = ["."]

[package]
name = "error-stack"
version = "0.1.1"
authors = ["HASH"]
edition = "2021"
rust-version = "1.63.0"
license = "MIT"
description = "A context-aware error-handling library that supports arbitrary attached user data"
documentation = "https://docs.rs/error-stack"
readme = "README.md"
repository = "https://github.com/hashintel/hash/tree/main/packages/libs/error-stack"
keywords = ["error", "library", "report", "no_std", "stack"]
categories = ["rust-patterns", "no-std"]

[dependencies]
tracing-error = { version = "0.2", optional = true, default_features = false }
pin-project = { version = "1.0.10", optional = true, default_features = false }
futures-core = { version = "0.3", optional = true, default-features = false }
smallvec = { version = "1", optional = true, default_features = false, features = ['union'] }
anyhow = { version = "1", default-features = false, optional = true }
eyre = { version = "0.6", default-features = false, optional = true }
error-stack-macros = { path = "macros" }

owo-colors = { version = "3.4.0", default-features = false, optional = true, features = ['supports-colors'] }

[dev-dependencies]
serde = { version = "1.0.137", features = ["derive"] }
serde_json = "1.0.81"
futures = { version = "0.3.21", default-features = false, features = ["executor"] }
trybuild = "1.0.63"
tracing = "0.1.35"
tracing-subscriber = "0.3.14"
insta = { version = "1.18.0", features = ['filters'] }
regex = "1.6.0"
expect-test = "1.4.0"
ansi-to-html = "0.1.0"
once_cell = "1.13.0"

[build-dependencies]
rustc_version = "0.4"

[features]
default = ["std", "small", "pretty-print"]

futures = ["dep:pin-project", "dep:futures-core"]
hooks = ["std"]
pretty-print = ["dep:owo-colors"]
small = ["dep:smallvec"]
spantrace = ["dep:tracing-error"]
std = ["anyhow?/std"]
unstable = []

[package.metadata.docs.rs]
all-features = true
cargo-args = ["-Z", "unstable-options", "-Z", "rustdoc-scrape-examples=examples"]
targets = ["x86_64-unknown-linux-gnu"]

[[example]]
name = "json_output"
required-features = ["std"]

[[example]]
name = "demo"
required-features = ["std"]

[[example]]
name = "exit_code"
required-features = ["std"]

[[example]]
name = "parse_config"
required-features = ["std"]


[[test]]
name = "common"
test = false
