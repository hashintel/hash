[package]
name = "error-stack"
version = "0.0.0"
authors = ["HASH"]
edition = "2021"
rust-version = "1.61.0"
description = "A context-aware error library with arbitrary attached user data"
documentation = "https://docs.rs/error-stack"
readme = "README.md"
repository = "https://github.com/hashintel/hash/tree/main/packages/libs/error-stack"
keywords = ["error", "library", "report", "no_std", "stack"]
categories = ["rust-patterns", "no-std"]

[dependencies]
tracing-error = { version = "0.2.0", optional = true }
once_cell = { version = "1.10.0", optional = true }
pin-project = { version = "1.0.10", optional = true }
futures-core = { version = "0.3.21", optional = true, default-features = false }

[dev-dependencies]
serde_json = "1.0.81"
futures = { version = "0.3.21", default-features = false, features = ["executor"] }

[build-dependencies]
rustc_version = "0.2.3"

[features]
default = ["std", "hooks"]
std = []
hooks = ["dep:once_cell", "std"]
spantrace = ["dep:tracing-error"]
futures = ["dep:pin-project"]

[package.metadata.docs.rs]
all-features = true
cargo-args = ["-Z", "unstable-options", "-Z", "rustdoc-scrape-examples=examples"]
targets = ["x86_64-unknown-linux-gnu"]

[[example]]
name = "json_output"
required-features = ["hooks"]

[[example]]
name = "contextual_messages"
required-features = ["std"]

[[example]]
name = "parse_config"
required-features = ["std"]
