extend = { path = "../../../.github/scripts/rust/Makefile.toml" }

[env]
CARGO_CLIPPY_HACK_FLAGS = "--workspace --feature-powerset --exclude-features default --optional-deps eyre,anyhow"
CARGO_TEST_HACK_FLAGS_BASE = "--workspace --feature-powerset --exclude-features default --optional-deps eyre,anyhow"
CARGO_TEST_HACK_FLAGS = "${CARGO_TEST_HACK_FLAGS_BASE} --group-features anyhow,eyre --group-features spantrace,futures,small"
CARGO_MIRI_FLAGS = "--tests --lib"
CARGO_INSTA_TEST_FLAGS = "--no-fail-fast"
# The only features that are of relevance are: spantrace, glyph, std, hooks
# all others do not change the output
CARGO_INSTA_TEST_HACK_FLAGS = "--workspace --keep-going --feature-powerset --include-features spantrace,glyph,std,experimental"

[env.release]
CARGO_TEST_HACK_FLAGS = "${CARGO_TEST_HACK_FLAGS_BASE}"

[tasks.test-task]
dependencies = ["install-rust-src"]

# Required for UI tests
[tasks.install-rust-src]
private = true
install_crate = { rustup_component_name = "rust-src" }

# Snapshot tests
[tasks.update-snapshots]
category = "Test"
description = "Test against insta to update snapshots"
run_task = { name = ['update-snapshots-task'] }

[tasks.update-snapshots-task]
private = true
run_task = { name = ['update-snapshots-task-lib', 'update-snapshots-task-doc'] }

[tasks.update-snapshots-task-lib]
extend = "task"
install_crate = "cargo-insta"
args = ["hack", "@@split(CARGO_INSTA_TEST_HACK_FLAGS, )", "nextest", "run", "--cargo-profile", "${CARGO_MAKE_CARGO_PROFILE}", "@@split(CARGO_TEST_FLAGS, )", "@@split(CARGO_INSTA_TEST_FLAGS, )", "${@}"]
env = { "INSTA_FORCE_PASS" = "1" }

[tasks.update-snapshots-task-doc]
# only run on nightly, as backtraces are otherwise not included
condition = { channels = ["nightly"] }
extend = "task"
install_crate = "cargo-insta"
args = ["test", "--profile", "${CARGO_MAKE_CARGO_PROFILE}", "@@split(CARGO_DOC_TEST_FLAGS, )", "--doc", "${@}"]
env = { "UPDATE_EXPECT" = "1", "RUST_BACKTRACE" = "1" }
