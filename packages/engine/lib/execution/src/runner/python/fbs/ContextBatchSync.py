# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ContextBatchSync(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ContextBatchSync()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsContextBatchSync(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ContextBatchSync
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ContextBatchSync
    def ContextBatch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Batch import Batch
            obj = Batch()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ContextBatchSync
    def CurrentStep(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(2)
def ContextBatchSyncStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddContextBatch(builder, contextBatch): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(contextBatch), 0)
def ContextBatchSyncAddContextBatch(builder, contextBatch):
    """This method is deprecated. Please switch to AddContextBatch."""
    return AddContextBatch(builder, contextBatch)
def AddCurrentStep(builder, currentStep): builder.PrependInt64Slot(1, currentStep, 0)
def ContextBatchSyncAddCurrentStep(builder, currentStep):
    """This method is deprecated. Please switch to AddCurrentStep."""
    return AddCurrentStep(builder, currentStep)
def End(builder): return builder.EndObject()
def ContextBatchSyncEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)