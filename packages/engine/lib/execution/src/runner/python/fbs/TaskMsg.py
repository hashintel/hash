# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TaskMsg(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TaskMsg()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTaskMsg(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TaskMsg
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TaskMsg
    def PackageSid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # TaskMsg
    def TaskId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from TaskId import TaskId
            obj = TaskId()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TaskMsg
    def Target(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # TaskMsg
    def GroupIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = o + self._tab.Pos
            from GroupIndex import GroupIndex
            obj = GroupIndex()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TaskMsg
    def Metaversioning(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from StateInterimSync import StateInterimSync
            obj = StateInterimSync()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TaskMsg
    def Payload(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from Serialized import Serialized
            obj = Serialized()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(6)
def TaskMsgStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddPackageSid(builder, packageSid): builder.PrependUint64Slot(0, packageSid, 0)
def TaskMsgAddPackageSid(builder, packageSid):
    """This method is deprecated. Please switch to AddPackageSid."""
    return AddPackageSid(builder, packageSid)
def AddTaskId(builder, taskId): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(taskId), 0)
def TaskMsgAddTaskId(builder, taskId):
    """This method is deprecated. Please switch to AddTaskId."""
    return AddTaskId(builder, taskId)
def AddTarget(builder, target): builder.PrependInt8Slot(2, target, 0)
def TaskMsgAddTarget(builder, target):
    """This method is deprecated. Please switch to AddTarget."""
    return AddTarget(builder, target)
def AddGroupIndex(builder, groupIndex): builder.PrependStructSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(groupIndex), 0)
def TaskMsgAddGroupIndex(builder, groupIndex):
    """This method is deprecated. Please switch to AddGroupIndex."""
    return AddGroupIndex(builder, groupIndex)
def AddMetaversioning(builder, metaversioning): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(metaversioning), 0)
def TaskMsgAddMetaversioning(builder, metaversioning):
    """This method is deprecated. Please switch to AddMetaversioning."""
    return AddMetaversioning(builder, metaversioning)
def AddPayload(builder, payload): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(payload), 0)
def TaskMsgAddPayload(builder, payload):
    """This method is deprecated. Please switch to AddPayload."""
    return AddPayload(builder, payload)
def End(builder): return builder.EndObject()
def TaskMsgEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)