diff --git a/node_modules/react-hook-form/dist/types/path/common.d.ts b/node_modules/react-hook-form/dist/types/path/common.d.ts
index 874f54e..0844b93 100644
--- a/node_modules/react-hook-form/dist/types/path/common.d.ts
+++ b/node_modules/react-hook-form/dist/types/path/common.d.ts
@@ -185,7 +185,7 @@ export declare type EvaluatePath<T, PT extends PathTuple> = PT extends [
  * TupleKeys<[number, string]> = '0' | '1'
  * ```
  */
-export declare type TupleKeys<T extends ReadonlyArray<any>> = Exclude<keyof T, keyof any[]>;
+export declare type TupleKeys<T extends ReadonlyArray<any>> = Exclude<keyof T, keyof any[]> | "length";
 /**
  * Type which extracts all numeric keys from an object.
  * @typeParam T - type
diff --git a/node_modules/react-hook-form/dist/types/path/eager.d.ts b/node_modules/react-hook-form/dist/types/path/eager.d.ts
index 7c75c77..112dc30 100644
--- a/node_modules/react-hook-form/dist/types/path/eager.d.ts
+++ b/node_modules/react-hook-form/dist/types/path/eager.d.ts
@@ -16,7 +16,7 @@ declare type PathImpl<K extends string | number, V> = V extends Primitive | Brow
  */
 export declare type Path<T> = T extends ReadonlyArray<infer V> ? IsTuple<T> extends true ? {
     [K in TupleKeys<T>]-?: PathImpl<K & string, T[K]>;
-}[TupleKeys<T>] : PathImpl<ArrayKey, V> : {
+}[TupleKeys<T>] : PathImpl<ArrayKey, V> | "length" : {
     [K in keyof T]-?: PathImpl<K & string, T[K]>;
 }[keyof T];
 /**
