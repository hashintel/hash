diff --git a/node_modules/blockprotocol/core.d.ts b/node_modules/blockprotocol/core.d.ts
index 205630a..085d764 100644
--- a/node_modules/blockprotocol/core.d.ts
+++ b/node_modules/blockprotocol/core.d.ts
@@ -25,11 +25,11 @@ export type BlockMetadata = {
 };
 
 export type BlockProtocolUpdateEntitiesAction<T> = {
+  accountId: string;
+  data: T;
+  entityId: string;
   entityTypeId?: string | null;
   entityTypeVersionId?: string | null;
-  entityId: string;
-  accountId?: string | null;
-  data: T;
 };
 
 export type BlockProtocolCreateEntitiesAction<T> = {
@@ -63,26 +63,22 @@ export type BlockProtocolMultiFilter = {
 export type BlockProtocolMultiSort = {
   field: string;
   desc?: boolean | undefined | null;
+  __typename?: string;
 }[];
 
-export type BlockProtocolAggregateOperationInput = {
-  pageNumber?: number;
-  itemsPerPage?: number;
-  multiSort?: BlockProtocolMultiSort | null;
-  multiFilter?: BlockProtocolMultiFilter | null;
-};
+
 
 export type BlockProtocolLinkedDataDefinition = {
   aggregate?: BlockProtocolAggregateOperationInput & { pageCount?: number };
-  entityTypeId?: string;
   entityId?: string;
 };
 
 export type BlockProtocolAggregateEntitiesPayload = {
+  accountId: string;
+  entityId?: string;
   entityTypeId?: string;
-  entityTypeVersionId?: string | null;
+  entityTypeVersionId?: string;
   operation: BlockProtocolAggregateOperationInput;
-  accountId?: string;
 };
 
 export type BlockProtocolAggregateEntitiesResult<T = unknown> = {
@@ -91,6 +87,10 @@ export type BlockProtocolAggregateEntitiesResult<T = unknown> = {
 };
 
 export type BlockProtocolAggregateEntityTypesPayload = {
+  accountId: string;
+  entityId?: string;
+  entityTypeId?: string;
+  entityTypeVersionId?: string;
   includeOtherTypesInUse: boolean;
 };
 
@@ -112,10 +112,15 @@ export type BlockProtocolFileMediaType = "image" | "video";
 
 export type BlockProtocolUploadFileFunction = {
   (action: {
+    accountId: string;
+    entityId?: string;
+    entityTypeId?: string;
+    entityTypeVersionId?: string;
     file?: File;
     url?: string;
     mediaType: BlockProtocolFileMediaType;
   }): Promise<{
+    accountId: string;
     entityId: string;
     url: string;
     mediaType: BlockProtocolFileMediaType;
@@ -139,6 +144,7 @@ export type BlockProtocolEntity = {
 };
 
 export type BlockProtocolLink = {
+  linkId: string;
   sourceEntityId: string;
   destinationEntityId: string;
   destinationEntityVersionId?: string | null;
@@ -153,9 +159,45 @@ export type BlockProtocolLinkGroup = {
   links: BlockProtocolLink[];
 };
 
+export type BlockProtocolAggregateOperationInput = {
+  entityTypeVersionId?: string | null;
+  pageNumber?: number;
+  itemsPerPage?: number;
+  multiSort?: BlockProtocolMultiSort | null;
+  multiFilter?: BlockProtocolMultiFilter | null;
+  entityTypeId?: string;
+};
+
+export type BlockProtocolAggregateOperationResults = BlockProtocolAggregateOperationInput & {
+  pageCount?: number;
+};
+
+export type BlockProtocolLinkedAggregationOperationInput = BlockProtocolAggregateOperationInput & {
+  entityTypeId: string;
+};
+
+export type BlockProtocolUpdateLinksMutationResults = {
+  sourceAccountId: string;
+  sourceEntityId: string;
+  path: string;
+  operation: BlockProtocolLinkedAggregationOperationInput & {
+    pageCount?: number;
+  };
+}
+
+export type BlockProtocolLinkedAggregation = BlockProtocolUpdateLinksMutationResults & {
+  __typename?: string;
+  results: Array<BlockProtocolEntity>;
+  pageCount?: number;
+  entityTypeId: string;
+}
+
+
 export type BlockProtocolCreateLinksAction = {
-  sourceAccountId?: string | null;
+  sourceAccountId: string;
   sourceEntityId: string;
+  sourceEntityTypeId?: string;
+  sourceEntityTypeVersionId?: string;
   destinationAccountId?: string | null;
   destinationEntityId: string;
   destinationEntityVersionId?: string | null;
@@ -167,11 +209,23 @@ export type BlockProtocolCreateLinksFunction = {
   (actions: BlockProtocolCreateLinksAction[]): Promise<BlockProtocolLink[]>;
 };
 
-export type BlockProtocolDeleteLinksAction = {
-  sourceAccountId?: string | null;
+export type BlockProtocolUpdateLinksAction = {
+  sourceAccountId: string;
   sourceEntityId: string;
-  index?: number | null;
   path: string;
+  updatedOperation: BlockProtocolLinkedAggregationOperationInput;
+};
+
+export type BlockProtocolUpdateLinksFunction = {
+  (actions:BlockProtocolUpdateLinksAction[]): Promise<BlockProtocolUpdateLinksMutationResults[]>;
+};
+
+export type BlockProtocolDeleteLinksAction = {
+  sourceAccountId: string;
+  sourceEntityId: string;
+  sourceEntityTypeId?: string;
+  sourceEntityTypeVersionId?: string;
+  linkId: string;
 };
 
 export type BlockProtocolDeleteLinksFunction = {
@@ -219,6 +273,7 @@ export interface JSONArray extends Array<JSONValue> {}
  * which the embedding application should provide.
  */
 export type BlockProtocolProps = {
+  accountId?: string;
   aggregateEntities?: BlockProtocolAggregateEntitiesFunction;
   aggregateEntitiesLoading?: boolean;
   aggregateEntitiesError?: Error;
@@ -234,8 +289,10 @@ export type BlockProtocolProps = {
   deleteLinksError?: Error;
   entityId?: string;
   entityTypeId?: string;
+  entityTypeVersionId?: string;
   linkedEntities?: BlockProtocolEntity[];
   linkGroups?: BlockProtocolLinkGroup[];
+  linkedAggregations?: BlockProtocolLinked[];
   id?: string;
   schemas?: Record<string, JSONObject>;
   type?: string;
@@ -245,4 +302,6 @@ export type BlockProtocolProps = {
   updateEntityTypes?: BlockProtocolUpdateEntityTypesFunction;
   updateEntityTypesLoading?: boolean;
   updateEntityTypesError?: Error;
+  updateLinks?: BlockProtocolUpdateLinksFunction;
+  uploadFile?: BlockProtocolUploadFileFunction;
 };
