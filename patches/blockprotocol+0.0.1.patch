diff --git a/node_modules/blockprotocol/core.d.ts b/node_modules/blockprotocol/core.d.ts
index 205630a..9dd787c 100644
--- a/node_modules/blockprotocol/core.d.ts
+++ b/node_modules/blockprotocol/core.d.ts
@@ -66,6 +66,7 @@ export type BlockProtocolMultiSort = {
 }[];
 
 export type BlockProtocolAggregateOperationInput = {
+  entityTypeId?: string;
   pageNumber?: number;
   itemsPerPage?: number;
   multiSort?: BlockProtocolMultiSort | null;
@@ -91,6 +92,7 @@ export type BlockProtocolAggregateEntitiesResult<T = unknown> = {
 };
 
 export type BlockProtocolAggregateEntityTypesPayload = {
+  accountId?: string;
   includeOtherTypesInUse: boolean;
 };
 
@@ -112,10 +114,12 @@ export type BlockProtocolFileMediaType = "image" | "video";
 
 export type BlockProtocolUploadFileFunction = {
   (action: {
+    accountId?: string;
     file?: File;
     url?: string;
     mediaType: BlockProtocolFileMediaType;
   }): Promise<{
+    accountId?: string | null;
     entityId: string;
     url: string;
     mediaType: BlockProtocolFileMediaType;
@@ -139,6 +143,7 @@ export type BlockProtocolEntity = {
 };
 
 export type BlockProtocolLink = {
+  linkId: string;
   sourceEntityId: string;
   destinationEntityId: string;
   destinationEntityVersionId?: string | null;
@@ -153,9 +158,30 @@ export type BlockProtocolLinkGroup = {
   links: BlockProtocolLink[];
 };
 
+export type BlockProtocolLinkedAggregationOperationInput = BlockProtocolAggregateOperationInput & {
+  entityTypeId: string;
+};
+
+export type BlockProtocolUpdateLinksMutationResults = {
+  sourceAccountId: string;
+  sourceEntityId: string;
+  path: string;
+  operation: BlockProtocolLinkedAggregationOperationInput & {
+    pageCount?: number;
+  };
+}
+
+export type BlockProtocolLinkedAggregation = BlockProtocolUpdateLinksMutationResults & {
+  results: Array<BlockProtocolEntity>;
+  pageCount?: number;
+  entityTypeId: string;
+}
+
 export type BlockProtocolCreateLinksAction = {
   sourceAccountId?: string | null;
   sourceEntityId: string;
+  sourceEntityTypeId?: string;
+  sourceEntityTypeVersionId?: string;
   destinationAccountId?: string | null;
   destinationEntityId: string;
   destinationEntityVersionId?: string | null;
@@ -167,11 +193,22 @@ export type BlockProtocolCreateLinksFunction = {
   (actions: BlockProtocolCreateLinksAction[]): Promise<BlockProtocolLink[]>;
 };
 
+export type BlockProtocolUpdateLinksAction = {
+  sourceAccountId?: string;
+  sourceEntityId: string;
+  path: string;
+  updatedOperation: BlockProtocolLinkedAggregationOperationInput;
+};
+
+export type BlockProtocolUpdateLinksFunction = {
+  (actions:BlockProtocolUpdateLinksAction[]): Promise<BlockProtocolUpdateLinksMutationResults[]>;
+};
+
 export type BlockProtocolDeleteLinksAction = {
+  linkId: string;
   sourceAccountId?: string | null;
   sourceEntityId: string;
   index?: number | null;
-  path: string;
 };
 
 export type BlockProtocolDeleteLinksFunction = {
@@ -185,6 +222,7 @@ export type BlockProtocolAggregateEntityTypesFunction = {
 };
 
 type BlockProtocolUpdateEntityTypesAction = {
+  accountId?: string;
   entityId: string;
   schema: JSONObject;
 };
@@ -219,6 +257,7 @@ export interface JSONArray extends Array<JSONValue> {}
  * which the embedding application should provide.
  */
 export type BlockProtocolProps = {
+  accountId?: string;
   aggregateEntities?: BlockProtocolAggregateEntitiesFunction;
   aggregateEntitiesLoading?: boolean;
   aggregateEntitiesError?: Error;
@@ -234,8 +273,10 @@ export type BlockProtocolProps = {
   deleteLinksError?: Error;
   entityId?: string;
   entityTypeId?: string;
+  entityTypeVersionId?: string;
   linkedEntities?: BlockProtocolEntity[];
   linkGroups?: BlockProtocolLinkGroup[];
+  linkedAggregations?: BlockProtocolLinked[];
   id?: string;
   schemas?: Record<string, JSONObject>;
   type?: string;
@@ -245,4 +286,6 @@ export type BlockProtocolProps = {
   updateEntityTypes?: BlockProtocolUpdateEntityTypesFunction;
   updateEntityTypesLoading?: boolean;
   updateEntityTypesError?: Error;
+  updateLinks?: BlockProtocolUpdateLinksFunction;
+  uploadFile?: BlockProtocolUploadFileFunction;
 };
