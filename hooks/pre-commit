#!/usr/bin/env node
const process = require("process");
const { spawnSync } = require("child_process");

const PACKAGES_TO_IGNORE = ["packages/hash/docker"];

const main = () => {
  const diff = spawnSync(
    "git",
    ["diff", "--cached", "--name-only", "--diff-filter=ACM"],
    { encoding: "utf8" },
  );
  if (diff.status !== 0) {
    throw new Error(diff.stderr);
  }

  let packagesToLint = diff.stdout
    .trim()
    .split("\n")
    .map((name) => name.match(/^packages\/hash\/[a-zA-Z_\-\.]+/))
    .filter((m) => m)
    .map((m) => m[0])
    .filter((name) => !PACKAGES_TO_IGNORE.includes(name));
  packagesToLint = Array.from(new Set(packagesToLint));

  if (packagesToLint.length === 0) {
    console.log("No packages to lint");
    process.exit(0);
  }

  console.log("Will lint packages", packagesToLint);

  let failed = false;
  packagesToLint.forEach((package) => {
    console.log(`Linting package ${package}`);
    const lint = spawnSync("yarn", ["lint"], {
      cwd: package,
      encoding: "utf8",
      stdio: ["pipe", process.stdout, "pipe"],
    });
    if (lint.status !== 0) {
      failed = true;
    }
  });

  if (failed) {
    console.error("Linting failed");
    process.exit(1);
  }
};

main();
