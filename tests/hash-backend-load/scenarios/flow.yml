before:
  flow:
    - function: signupUser
    - function: completeRegistration

scenarios:
  - name: Mimic a flow run
    beforeScenario:
      - initializeTracing
    beforeRequest:
      - enterRequestSpan
      - refreshSessionToken
    afterResponse:
      - exitRequestSpan
    afterScenario:
      - tearDownTracing
    flow:
      - count: 2
        loop:
          - post:
              name: Create entity in GraphQL
              url: /
              json:
                query: |
                  mutation createEntity($webId: WebId!, $entityTypeId: VersionedUrl!, $properties: PropertyObjectWithMetadata!) {
                    createEntity(webId: $webId, entityTypeId: $entityTypeId, properties: $properties)
                  }
                variables:
                  webId: "{{ session.webId }}"
                  entityTypeId: https://hash.ai/@h/types/entity-type/usage-record/v/1
                  properties:
                    value:
                      https://hash.ai/@h/types/property-type/input-unit-count/:
                        value: 1000
                        metadata:
                          dataTypeId: https://blockprotocol.org/@blockprotocol/types/data-type/number/v/1
                      https://hash.ai/@h/types/property-type/output-unit-count/:
                        value: 1000
                        metadata:
                          dataTypeId: https://blockprotocol.org/@blockprotocol/types/data-type/number/v/1
              expect:
                - notHasProperty: errors
          - post:
              name: Create entity in Graph
              url: http://127.0.0.1:4000/entities/bulk
              headers:
                X-Authenticated-User-Actor-Id: "{{ session.webId }}"
              json:
                - webId: "{{ session.webId }}"
                  entityTypeIds:
                    - https://hash.ai/@h/types/entity-type/usage-record/v/1
                  properties:
                    value:
                      https://hash.ai/@h/types/property-type/input-unit-count/:
                        value: 1000
                        metadata:
                          dataTypeId: https://blockprotocol.org/@blockprotocol/types/data-type/number/v/1
                      https://hash.ai/@h/types/property-type/output-unit-count/:
                        value: 1000
                        metadata:
                          dataTypeId: https://blockprotocol.org/@blockprotocol/types/data-type/number/v/1
                  draft: false
                  relationships:
                    - relation: setting
                      subject:
                        kind: setting
                        subjectId: administratorFromWeb
