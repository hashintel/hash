cargo-features = ["edition2024"]

[package]
name = "graph-benches"
version.workspace = true
edition.workspace = true
license.workspace = true
publish.workspace = true
authors.workspace = true
# If we leave `autobenches` enabled, then every module in the benches folder is compiled to be a standalone binary,
# which means we can't use modules to group shared logic (importing via `super`, etc.)
#
# We specifically identify the binary using the [[bench]] attribute below. Specific groups of benchmarks are still
# runnable by specifying them: `cargo bench -- <NAME OF BENCHMARKS>
autobenches = false

[dev-dependencies]
graph = { workspace = true }
graph-test-data = { workspace = true }
graph-types = { workspace = true }
temporal-versioning = { workspace = true }
authorization = { workspace = true }
repo-chores = { workspace = true }

type-system = { workspace = true }

criterion = { workspace = true, features = ["async_tokio", "html_reports"] }
criterion-macro = { workspace = true }
futures = { workspace = true }
rand = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
tokio = { workspace = true, features = ["macros"] }
tokio-postgres = { workspace = true, default-features = false }
tracing = { workspace = true }
tracing-flame = { workspace = true }
tracing-subscriber = { workspace = true }
uuid = { workspace = true, features = ["v4", "serde"] }

[lints]
workspace = true

[[bench]]
name = "read_scaling"
path = "read_scaling/lib.rs"

[[bench]]
name = "representative_read"
path = "representative_read/lib.rs"
