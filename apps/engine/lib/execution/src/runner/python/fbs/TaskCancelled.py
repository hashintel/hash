# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TaskCancelled(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TaskCancelled()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTaskCancelled(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TaskCancelled
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TaskCancelled
    def TaskId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from TaskId import TaskId
            obj = TaskId()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def Start(builder): builder.StartObject(1)
def TaskCancelledStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddTaskId(builder, taskId): builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(taskId), 0)
def TaskCancelledAddTaskId(builder, taskId):
    """This method is deprecated. Please switch to AddTaskId."""
    return AddTaskId(builder, taskId)
def End(builder): return builder.EndObject()
def TaskCancelledEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)