# This file either runs with JetBrains' http requests or using httpYac (https://httpyac.github.io).

### Create account
POST http://127.0.0.1:4000/accounts
Content-Type: application/json
X-Authenticated-User-Actor-Id: 00000000-0000-0000-0000-000000000000

{}

> {%
    client.test("status", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.global.set("account_id", response.body.toString());
    });
%}

### Create account web
POST http://127.0.0.1:4000/webs
Content-Type: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
   "ownedById": "{{account_id}}",
   "owner": {
       "kind": "account",
       "subjectId": "{{account_id}}"
    }
}

> {%
    client.test("status", function() {
        client.assert(response.status === 204, "Response status is not 204");
    });
%}


### Insert Name property type
POST http://127.0.0.1:4000/property-types
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "schema": [{
  "$id": "http://localhost:3000/@alice/types/property-type/first-level/v/1",
  "$schema": "https://blockprotocol.org/types/modules/graph/0.3/schema/property-type",
  "description": "First Level",
  "kind": "propertyType",
  "oneOf": [

    {
      "$ref": "https://blockprotocol.org/@blockprotocol/types/data-type/object/v/1"
    },
    {
      "properties": {
        "http://localhost:3000/@alice/types/property-type/second-level/": {
          "$ref": "http://localhost:3000/@alice/types/property-type/second-level/v/1"
        }
      },
      "type": "object"
    }
  ],
  "title": "First Level"
},{
  "$id": "http://localhost:3000/@alice/types/property-type/second-level/v/1",
  "$schema": "https://blockprotocol.org/types/modules/graph/0.3/schema/property-type",
  "description": "Second level",
  "kind": "propertyType",
  "oneOf": [
    {
      "$ref": "https://blockprotocol.org/@blockprotocol/types/data-type/object/v/1"
    }
  ],
  "title": "Second level"
}],
  "relationships": []
}

### Insert Friendship entity link type
POST http://127.0.0.1:4000/entity-types
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "schema": {
  "$id": "http://localhost:3000/@alice/types/entity-type/test-entity-type/v/1",
  "$schema": "https://blockprotocol.org/types/modules/graph/0.3/schema/entity-type",
  "description": "Some test",
  "kind": "entityType",
  "properties": {
    "http://localhost:3000/@alice/types/property-type/first-level/": {
      "$ref": "http://localhost:3000/@alice/types/property-type/first-level/v/1"
    }
  },
  "title": "Test Entity Type",
  "type": "object"
},
  "relationships": [{
    "relation": "instantiator",
    "subject": {
      "kind": "account",
      "subjectId": "{{account_id}}"
    }
  }]
}

### Validate person entity to insert
POST http://127.0.0.1:4000/entities/validate
Content-Type: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "entityTypes": ["http://localhost:3000/@alice/types/entity-type/test-entity-type/v/1"],
  "properties": {
    "http://localhost:3000/@alice/types/property-type/first-level/": {
      "http://localhost:3000/@alice/types/property-type/second-level/": {
        "abc": "def"
      }
    }
  }
}


> {%
    client.test("status", function() {
        client.assert(response.status === 204, "Response status is not 204");
    });
%}
