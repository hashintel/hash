# This file either runs with JetBrains' http requests or using httpYac (https://httpyac.github.io).

### Create account
POST http://127.0.0.1:4000/accounts
X-Authenticated-User-Actor-Id: 00000000-0000-0000-0000-000000000000

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
  client.global.set("account_id", response.body.toString());
%}

### Create account web
POST http://127.0.0.1:4000/webs
Content-Type: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
   "ownedById": "{{account_id}}",
   "owner": {
       "kind": "account",
       "subjectId": "{{account_id}}"
    }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 204, "Response status is not 204");
  });
%}

### Insert link entity type
POST http://127.0.0.1:4000/entity-types
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "schema": {
    "$schema": "https://blockprotocol.org/types/modules/graph/0.3/schema/entity-type",
    "kind": "entityType",
    "$id": "http://localhost:3000/@snapshot/types/entity-type/link/v/1",
    "type": "object",
    "title": "Object",
    "allOf": [{ "$ref": "https://blockprotocol.org/@blockprotocol/types/entity-type/link/v/1" }],
    "properties": {}
  }
}

> {%
    client.test("status", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    client.global.set("link_entity_type_id", `${response.body.recordId.baseUrl}v/${response.body.recordId.version}`);
%}

### Allow the link entity type to be instantiated by the account
POST http://127.0.0.1:4000/entity-types/relationships
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

[
  {
    "operation": "create",
    "resource": "{{link_entity_type_id}}",
    "relationAndSubject": {
      "relation": "instantiator",
      "subject": {
        "kind": "account",
        "subjectId": "{{account_id}}"
      }
    }
  }
]

### Insert entity type
POST http://127.0.0.1:4000/entity-types
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "schema": {
    "$schema": "https://blockprotocol.org/types/modules/graph/0.3/schema/entity-type",
    "kind": "entityType",
    "$id": "http://localhost:3000/@snapshot/types/entity-type/object/v/1",
    "type": "object",
    "title": "Object",
    "properties": {},
    "links": {
      "http://localhost:3000/@snapshot/types/entity-type/link/v/1": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "http://localhost:3000/@snapshot/types/entity-type/object/v/1"
            }
          ]
        },
        "ordered": false
      }
    }
  }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
  client.global.set("entity_type_id", `${response.body.recordId.baseUrl}v/${response.body.recordId.version}`);
%}

### Allow the entity type to be instantiated by the account
POST http://127.0.0.1:4000/entity-types/relationships
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

[
  {
    "operation": "create",
    "resource": "{{entity_type_id}}",
    "relationAndSubject": {
      "relation": "instantiator",
      "subject": {
        "kind": "account",
        "subjectId": "{{account_id}}"
      }
    }
  }
]


### Insert entity A
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/object/v/1",
  "owner": "{{account_id}}",
  "entityUuid": "0000000A-0001-0000-0000-000000000000"
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
  client.global.set("entity_a", response.body.recordId.entityId);
%}

### Insert entity B
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/object/v/1",
  "owner": "{{account_id}}",
  "entityUuid": "0000000B-0001-0000-0000-000000000000"
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
  client.global.set("entity_b", response.body.recordId.entityId);
%}

### Insert entity C
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/object/v/1",
  "owner": "{{account_id}}",
  "entityUuid": "0000000C-0001-0000-0000-000000000000"
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
  client.global.set("entity_c", response.body.recordId.entityId);
%}

### Insert entity D
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/object/v/1",
  "owner": "{{account_id}}",
  "entityUuid": "0000000D-0001-0000-0000-000000000000"
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
  client.global.set("entity_d", response.body.recordId.entityId);
%}

### Insert link between A and B
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/link/v/1",
  "entityUuid": "000000AB-0001-0000-0000-000000000000",
  "owner": "{{account_id}}",
  "linkData": {
    "leftEntityId": "{{entity_a}}",
    "rightEntityId": "{{entity_b}}"
  }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}

### Insert link between B and C
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/link/v/1",
  "entityUuid": "000000BC-0001-0000-0000-000000000000",
  "owner": "{{account_id}}",
  "linkData": {
    "leftEntityId": "{{entity_b}}",
    "rightEntityId": "{{entity_c}}"
  }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}

### Insert link between C and D
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/link/v/1",
  "entityUuid": "000000CD-0001-0000-0000-000000000000",
  "owner": "{{account_id}}",
  "linkData": {
    "leftEntityId": "{{entity_c}}",
    "rightEntityId": "{{entity_d}}"
  }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}

### Insert link between D and A
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/link/v/1",
  "entityUuid": "000000DA-0001-0000-0000-000000000000",
  "owner": "{{account_id}}",
  "linkData": {
    "leftEntityId": "{{entity_d}}",
    "rightEntityId": "{{entity_a}}"
  }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}


### Insert link between B and A
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/link/v/1",
  "entityUuid": "000000BA-0001-0000-0000-000000000000",
  "owner": "{{account_id}}",
  "linkData": {
    "leftEntityId": "{{entity_b}}",
    "rightEntityId": "{{entity_a}}"
  }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}



### Insert link between C and B
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/link/v/1",
  "entityUuid": "000000CB-0001-0000-0000-000000000000",
  "owner": "{{account_id}}",
  "linkData": {
    "leftEntityId": "{{entity_c}}",
    "rightEntityId": "{{entity_b}}"
  }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}



### Insert link between D and C
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/link/v/1",
  "entityUuid": "000000DC-0001-0000-0000-000000000000",
  "owner": "{{account_id}}",
  "linkData": {
    "leftEntityId": "{{entity_d}}",
    "rightEntityId": "{{entity_c}}"
  }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}



### Insert link between A and D
POST http://127.0.0.1:4000/entities
Content-Type: application/json
Accept: application/json
X-Authenticated-User-Actor-Id: {{account_id}}

{
  "ownedById": "{{account_id}}",
  "properties": {},
  "entityTypeId": "http://localhost:3000/@snapshot/types/entity-type/link/v/1",
  "entityUuid": "000000AD-0001-0000-0000-000000000000",
  "owner": "{{account_id}}",
  "linkData": {
    "leftEntityId": "{{entity_a}}",
    "rightEntityId": "{{entity_d}}"
  }
}

> {%
  client.test("status", function() {
    client.assert(response.status === 200, "Response status is not 200");
  });
%}
