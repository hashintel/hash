version: "3.9"

services:
  postgres:
    environment:
      HASH_KRATOS_PG_DATABASE: "${HASH_KRATOS_PG_TEST_DATABASE}"
      HASH_TEMPORAL_PG_DATABASE: "${HASH_TEMPORAL_PG_TEST_DATABASE}"
      HASH_TEMPORAL_VISIBILITY_PG_DATABASE: "${HASH_TEMPORAL_VISIBILITY_PG_TEST_DATABASE}"
      HASH_GRAPH_PG_DATABASE: "${HASH_GRAPH_PG_TEST_DATABASE}"

  graph-migrate:
    environment:
      HASH_GRAPH_PG_DATABASE: "${HASH_GRAPH_PG_TEST_DATABASE}"

  graph:
    environment:
      HASH_GRAPH_PG_DATABASE: "${HASH_GRAPH_PG_TEST_DATABASE}"

  graph-test-server:
    init: true
    depends_on:
      postgres:
        condition: service_healthy
      graph-migrate:
        condition: service_completed_successfully
    image: hash-graph
    read_only: true
    security_opt:
      - no-new-privileges:true
    volumes:
      - log:/log
    command: test-server
    environment:
      HASH_GRAPH_PG_USER: "${POSTGRES_USER}"
      HASH_GRAPH_PG_PASSWORD: "${POSTGRES_PASSWORD}"
      HASH_GRAPH_PG_HOST: "postgres"
      HASH_GRAPH_PG_PORT: "5432"
      HASH_GRAPH_PG_DATABASE: "${HASH_GRAPH_PG_TEST_DATABASE}"
      HASH_GRAPH_LOG_FORMAT: "${HASH_GRAPH_LOG_FORMAT:-pretty}"
      HASH_GRAPH_LOG_FOLDER: "/log/graph-test-service"
      HASH_GRAPH_API_HOST: "0.0.0.0"
      HASH_GRAPH_API_PORT: "4000"
      RUST_LOG: "info"
      RUST_BACKTRACE: 1
    ports:
      - "${HASH_GRAPH_TEST_API_PORT}:4000"
    healthcheck:
      test:
        [
          "CMD",
          "/hash-graph",
          "test-server",
          "--healthcheck",
          "--api-port",
          "4000",
        ]
      interval: 2s
      timeout: 2s
      retries: 10

  kratos-migrate:
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${HASH_KRATOS_PG_TEST_DATABASE}

  kratos:
    environment:
      - DSN=postgres://${HASH_KRATOS_PG_USER}:${HASH_KRATOS_PG_PASSWORD}@postgres:${POSTGRES_PORT}/${HASH_KRATOS_PG_TEST_DATABASE}

  temporal-setup:
    environment:
      DBNAME: "${HASH_TEMPORAL_PG_TEST_DATABASE}"
      VISIBILITY_DBNAME: "${HASH_TEMPORAL_VISIBILITY_PG_TEST_DATABASE}"

  temporal-migrate:
    environment:
      DBNAME: "${HASH_TEMPORAL_PG_TEST_DATABASE}"
      VISIBILITY_DBNAME: "${HASH_TEMPORAL_VISIBILITY_PG_TEST_DATABASE}"

  temporal:
    environment:
      DBNAME: "${HASH_TEMPORAL_PG_TEST_DATABASE}"
      VISIBILITY_DBNAME: "${HASH_TEMPORAL_VISIBILITY_PG_TEST_DATABASE}"
