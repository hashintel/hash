name: Rust

on:
  pull_request:
  push:
    branches:
      - main
      - dev/**
  merge_group:

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: hashintel
  TURBO_REMOTE_ONLY: true

jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    outputs:
      lint: ${{ steps.crates.outputs.lint }}
      test: ${{ steps.crates.outputs.test }}
      coverage: ${{ steps.crates.outputs.coverage }}
      publish: ${{ steps.crates.outputs.publish }}
      build: ${{ steps.crates.outputs.build }}
      samples: ${{ steps.samples.outputs.samples }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          fetch-depth: 2

      - name: Setup CI
        uses: ./.github/actions/setup-rust-ci

      - name: Find changed crates
        id: crates
        run: |
          export GITHUB_OUTPUT_FILE_PATH=$(mktemp)
          python .github/scripts/rust/setup.py
          cat $GITHUB_OUTPUT_FILE_PATH >> $GITHUB_OUTPUT

      - name: Determine samples
        id: samples
        run: |
          if [[ ${{ github.event_name }} = pull_request ]]; then
            echo "samples=1" >> $GITHUB_OUTPUT
          else
            echo "samples=10" >> $GITHUB_OUTPUT
          fi

  publish:
    name: publish
    needs: setup
    if: needs.setup.outputs.publish != '{}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup.outputs.publish) }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Install Rust toolchain
        uses: ./.github/actions/install-rust-toolchain
        with:
          toolchain: ${{ matrix.toolchain }}
          working-directory: ${{ matrix.directory }}

      - name: Install tools
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'merge_group' }}
        uses: taiki-e/install-action@5b205dd5b807eef56fdbfeedeedcee63c5d44090 # v2.18.16
        with:
          tool: just@1.13.0,cargo-hack@0.6.7,cargo-nextest@0.9.37,rust-script@0.23.0,cargo-semver-checks

      - name: Run lints
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'merge_group' }}
        working-directory: ${{ matrix.directory }}
        run: just lint

      - name: Run tests
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'merge_group' }}
        working-directory: ${{ matrix.directory }}
        run: just test

      - name: Login
        run: |
          [[ -n "${{ secrets.CARGO_REGISTRY_TOKEN }}" ]]
          cargo login "${{ secrets.CARGO_REGISTRY_TOKEN }}"

      - name: SemVer check
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'merge_group' }}
        working-directory: ${{ matrix.directory }}
        run: |
          # Only run semver checks if this is not the initial release
          grep '^version' Cargo.toml | grep -q -v 0.0.0-reserved || exit 0

          # Temporarily disabled as `error-stack@0.3.1` does not compile on the current nightly toolchain
          # cargo +${{ matrix.toolchain }} semver-checks check-release

      - name: Publish (dry run)
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'merge_group' }}
        working-directory: ${{ matrix.directory }}
        run: cargo +${{ matrix.toolchain }} publish --all-features --dry-run

      - name: Publish
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        working-directory: ${{ matrix.directory }}
        run: cargo +${{ matrix.toolchain }} publish --all-features

  merging-enabled:
    name: Merging enabled
    needs: [setup, publish]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: check setup
        run: |
          [[ ${{ needs.setup.result }} = success ]]
      - name: check publish
        run: |
          [[ ${{ needs.publish.result }} =~ success|skipped ]]
