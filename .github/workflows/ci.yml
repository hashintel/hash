name: CI
on: pull_request

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/warm-up-repo

      - name: Run yarn lint:dependency-version-consistency
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:dependency-version-consistency; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try running `yarn fix:dependency-version-consistency` locally to apply autofixes.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:eslint
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:eslint; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try running `yarn fix:eslint` locally to apply autofixes.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:lockfile-lint
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:lockfile-lint; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try resetting yarn.lock to its previous state and then run `yarn install`.'
            echo 'If your `~/.npmrc` mentions a custom registry, you should remove this setting first.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:markdownlint
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:markdownlint; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try running `yarn fix:markdownlint` locally to apply autofixes.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:prettier
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:prettier; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Try running `yarn fix:prettier` locally to apply autofixes.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

      - name: Run yarn lint:tsc
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:tsc; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Please fix the above errors locally for the check to pass.'
            echo 'If you don’t see them, try merging target branch into yours.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

        ## TODO: Replace with `yarn fix:yarn-dedupe` after upgrading to Yarn v3+
        ## https://yarnpkg.com/cli/dedupe
        ## https://github.com/yarnpkg/berry/issues/2297
      - name: Run yarn lint:yarn-deduplicate
        if: ${{ success() || failure() }}
        run: |
          if ! yarn lint:yarn-deduplicate; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Some dependencies can be deduplicated, which will make node_modules'
            echo 'lighter and potentially save us from unexplainable bugs.'
            echo 'Please run `yarn fix:yarn-deduplicate` locally and commit yarn.lock.'
            echo 'You may need to run the command 2-3 times in some rare cases.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1
          fi

        ## yarn --frozen-lockfile does not work for monorepos, so using a workaround:
        ## https://github.com/yarnpkg/yarn/issues/5840#issuecomment-467516207
        ## TODO: Use `yarn install --immutable` after upgrading to Yarn v3+
      - name: Check yarn.lock stability
        if: ${{ success() || failure() }}
        run: |
          git diff yarn.lock
          if ! git diff --exit-code yarn.lock; then
            echo ''
            echo ''
            echo 'ℹ️ ℹ️ ℹ️'
            echo 'Changes were detected in yarn.lock file after running `yarn install`.'
            echo 'This makes runtime less stable, so should be avoided.'
            echo 'Please run `yarn install` locally and commit yarn.lock.'
            echo 'You may also want to run `yarn fix:yarn-deduplicate` just in case.'
            echo 'ℹ️ ℹ️ ℹ️'
            exit 1;
          fi

  backend-integration-tests:
    name: Backend integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/warm-up-repo

      - name: Create temp files and folders
        run: |
          touch .env.local
          mkdir -p var/logs

      - name: Launch external services
        if: ${{ success() || failure() }}
        run: |
          docker-compose --file external-services/docker-compose.yml build
          docker-compose --file external-services/docker-compose.yml up --detach

      - name: Seed data
        if: ${{ success() || failure() }}
        run: |
          yarn seed-data

      - name: Launch backend in test mode
        if: ${{ success() || failure() }}
        run: |
          yarn dev:backend 2>&1 | tee var/logs/backend.log & ## ampersand enables background mode
          yarn wait-on --timeout 30000 http://0.0.0.0:5001
        env:
          NODE_ENV: test

      - run: yarn test:backend-integration
        if: ${{ success() || failure() }}

      - name: Show external services logs
        if: ${{ success() || failure() }}
        run: |
          docker-compose --file external-services/docker-compose.yml logs 2>&1 | tee var/logs/external-services.log

      - name: Show backend logs
        if: ${{ success() || failure() }}
        run: cat var/logs/backend.log

      - name: Upload artifact backend-integration-tests-var
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: backend-integration-tests-var
          path: |
            var/api
            var/logs
          ## Getting permission denied for docker volumes (e.g. postgres data)
          ## https://github.com/actions/upload-artifact/issues/192

  playwright-tests:
    name: Playwright tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/warm-up-repo

      - name: Create temp files and folders
        run: |
          touch .env.local
          mkdir -p var/logs

      - name: Launch external services
        if: ${{ success() || failure() }}
        run: |
          docker-compose --file external-services/docker-compose.yml build
          docker-compose --file external-services/docker-compose.yml up --detach

      - name: Seed data
        if: ${{ success() || failure() }}
        run: |
          yarn seed-data

      - name: Launch backend
        if: ${{ success() || failure() }}
        run: |
          yarn dev:backend 2>&1 | tee var/logs/backend.log & ## ampersand enables background mode
          yarn wait-on --timeout 30000 http://0.0.0.0:5001

      - name: Build and launch frontend
        if: ${{ success() || failure() }}
        run: |
          yarn workspace @hashintel/hash-frontend next build
          yarn workspace @hashintel/hash-frontend start 2>&1 | tee var/logs/frontend.log & ## ampersand enables background mode
          yarn wait-on --timeout 30000 http://0.0.0.0:3000

      - run: yarn playwright install-deps chrome firefox
        if: ${{ success() || failure() }}

      - name: Run Playwright tests
        if: ${{ success() || failure() }}
        run: |
          yarn test:playwright

      - name: Show external services logs
        if: ${{ success() || failure() }}
        run: |
          docker-compose --file external-services/docker-compose.yml logs 2>&1 | tee var/logs/external-services.log
          cat var/logs/external-services.log

      - name: Show backend logs
        if: ${{ success() || failure() }}
        run: cat var/logs/backend.log

      - name: Show frontend logs
        if: ${{ success() || failure() }}
        run: cat var/logs/frontend.log

      - name: Upload artifact playwright-report
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: playwright-report
          path: packages/hash/playwright/playwright-report

      - name: Upload artifact playwright-var
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: playwright-var
          path: |
            var/api
            var/logs
          ## Getting permission denied for docker volumes (e.g. postgres data)
          ## https://github.com/actions/upload-artifact/issues/192

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: ./.github/actions/warm-up-repo

      - run: yarn test:unit
        if: ${{ success() || failure() }}
