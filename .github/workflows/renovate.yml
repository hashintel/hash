name: Update dependencies
on:
  workflow_dispatch:
    inputs:
      repoCache:
        description: "Reset or disable the cache?"
        type: choice
        default: enabled
        options:
          - enabled
          - disabled
          - reset
      logLevel:
        description: "Override default log level"
        type: choice
        default: info
        options:
          - "debug"
          - "info"
          - "warn"
          - "error"
      overrideSchedule:
        description: "Override all schedules"
        type: boolean
        default: false
      dryRun:
        description: "Dry run mode"
        type: choice
        default: disabled
        options:
          - disabled
          - extract
          - lookup
          - full
  schedule:
    # Run every 30 minutes
    - cron: "0/30 * * * *"

env:
  cache_archive: renovate_cache.tar.gz
  cache_dir: /tmp/renovate/cache/renovate/repository
  cache_key: renovate-cache
  dry_run: ${{ github.event.inputs.dryRun || 'disabled' }}

concurrency:
  cancel-in-progress: false
  group: renovate

permissions:
  contents: write
  id-token: write

jobs:
  renovate:
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Vault
        id: secrets
        uses: hashicorp/vault-action@7709c609789c5e27b757a85817483caadbb5939a # v3.3.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: jwt
          role: dev
          secrets: |
            automation/data/pipelines/hash/dev github_worker_app_id | GITHUB_WORKER_APP_ID ;
            automation/data/pipelines/hash/dev github_worker_app_private_key | GITHUB_WORKER_APP_PRIVATE_KEY ;

      - name: Get token
        id: app-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2
        with:
          app-id: ${{ steps.secrets.outputs.GITHUB_WORKER_APP_ID }}
          private-key: ${{ steps.secrets.outputs.GITHUB_WORKER_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Install Node.js
        uses: jdx/mise-action@13abe502c30c1559a5c37dff303831bab82c9402 # v2.2.3
        with:
          install_args: node npm:renovate
        env:
          MISE_NODE_COREPACK: 1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: dawidd6/action-download-artifact@07ab29fd4a977ae4d2b275087cf67563dfdf0295 # v9
        if: github.event.inputs.repoCache != 'disabled'
        continue-on-error: true
        with:
          name: ${{ env.cache_key }}
          path: cache-download

      - name: Extract renovate cache
        if: github.event.inputs.repoCache != 'disabled'
        run: |
          if [ ! -d cache-download ] ; then
            echo "No cache found."
            exit 0
          fi

          mkdir -p $cache_dir
          tar -xzf cache-download/$cache_archive -C $cache_dir

      - name: Run renovate
        env:
          LOG_LEVEL: ${{ inputs.logLevel || 'info' }}
          RENOVATE_FORCE: ${{ github.event.inputs.overrideSchedule == 'true' && '{"schedule":null}' || '' }}
          RENOVATE_DRY_RUN: ${{ env.dry_run == 'disabled' && 'null' || inputs.dryRun }}
          RENOVATE_PLATFORM_COMMIT: enabled
          RENOVATE_REPOSITORIES: ${{ github.repository }}
          # TODO: Consider using S3 by setting `RENOVATE_REPOSITORY_CACHE_TYPE`
          # see: https://linear.app/hash/issue/H-3315/use-s3-to-store-renovate-cache
          RENOVATE_REPOSITORY_CACHE: ${{ github.event.inputs.repoCache || 'enabled' }}
        run: renovate --token ${{ steps.app-token.outputs.token }}

      - name: Compress renovate cache
        run: tar -czvf $cache_archive -C $cache_dir .

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: env.dry_run == 'disabled' && github.event.inputs.repoCache != 'disabled'
        with:
          name: ${{ env.cache_key }}
          path: ${{ env.cache_archive }}
          retention-days: 1
