name: Cleanup obsolete caches
on:
  pull_request:
    types:
      - closed

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Remove caches
        run: |
          gh extension install actions/gh-actions-cache

          REPO=${{ github.repository }}
          BRANCH="refs/pull/${{ github.event.pull_request.number }}/merge"

          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove docker images
        run: |
          PR_BRANCH="${{ github.event.pull_request.number }}_merge"
          MERGE_BRANCH="gh-readonly-queue_main_pr-${{ github.event.pull_request.number }}-"
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/orgs/hashintel/packages/container/hash-graph/versions" \
              | jq --arg pr "$PR_BRANCH" --arg merge "$MERGE_BRANCH" \
                '.[] | { id, metadata } | select(.metadata.container.tags[] | (startswith($pr) or startswith($merge))) | {id}[]' \
              | xargs -I {} \
          curl -X DELETE \
            -H "Accept: application/vnd.github.v3+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Authorization: Bearer $PAT" \
            "https://api.github.com/orgs/hashintel/packages/container/hash-graph/versions/{}"

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
