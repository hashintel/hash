name: Install Rust toolchain
description: "Install Rust toolchain"

inputs:
  toolchain:
    required: false
    description: "Rust toolchain, e.g. 'stable' or 'nightly'"
  working-directory:
    description: "Working directory to run the action in"
    required: false
    default: "."

runs:
  using: "composite"
  steps:
    - name: "Install Rust"
      shell: bash
      run: |
        # regex for components that are only available on nightly and should not be installed on stable
        # these are in variables due to: https://stackoverflow.com/a/56449915/9077988
        NIGHTLY_ONLY="miri|llvm-tools|llvm-tools-preview|rustc-codegen-cranelift-preview"
        NIGHTLY_TOOLCHAIN="nightly-.*"

        if [[ -f "${{ inputs.working-directory }}/rust-toolchain.toml" ]]; then
          RUST_TOOLCHAIN_FILE="${{ inputs.working-directory }}/rust-toolchain.toml"
        else
          RUST_TOOLCHAIN_FILE="rust-toolchain.toml"
        fi
        # extract components from the rust-toolchain.toml
        COMPONENTS="$(cat $RUST_TOOLCHAIN_FILE | yq -p toml '.toolchain.components[]')"

        if [[ "${{ inputs.toolchain }}" != "" ]]; then
          TOOLCHAIN_CHANNEL="${{ inputs.toolchain }}"
        else
          TOOLCHAIN_CHANNEL="$(cat $RUST_TOOLCHAIN_FILE | yq -p toml '.toolchain.channel')"
        fi
        rustup toolchain install "$TOOLCHAIN_CHANNEL"

        for component in $COMPONENTS; do
          # depending on the toolchain we need to conditionally skip specific components
          if [[ ! "$TOOLCHAIN_CHANNEL" =~ $NIGHTLY_TOOLCHAIN ]]; then
            # ensure that we only install components that are meant for stable
            if [[ ! $component =~ $NIGHTLY_ONLY ]]; then
              rustup component add --toolchain "$TOOLCHAIN_CHANNEL" "$component"
            fi
          else
            rustup component add --toolchain "$TOOLCHAIN_CHANNEL" "$component"
          fi
        done

        echo "RUSTUP_TOOLCHAIN=$TOOLCHAIN_CHANNEL" >> $GITHUB_ENV
