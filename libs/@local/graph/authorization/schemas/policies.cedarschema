namespace HASH {
  entity Role  {
  };

  entity Web {
  };

  entity Team in [Web, Team] {
  };

  entity Entity in [Web] {
    entity_types: Set<EntityType>,
    entity_base_types: Set<String>,
    created_by: ActorId,
  };

  entity EntityType in [Web] {
    base_url: String,
    version: Long,
    is_remote: Bool,
  };

  entity PropertyType in [Web] {
    base_url: String,
    version: Long,
    is_remote: Bool,
  };

  entity User, Machine, Ai in [HASH::Web::Role, HASH::Team::Role] {
    id: ActorId,
  };

  entity Public {
    // This is required to add policies depending on `principal.id`
    // in Cedar policies. Effectively, we set this to a dummy value
    // `{"type": "public", "id": "00000000-0000-0000-0000-000000000000"}`.
    id: ActorId,
  };

  action all;

  action createWeb in [all] appliesTo {
    principal: [User, Machine, Ai],
    resource: [Web],
  };

  action create, view, update, archive in [all] appliesTo {
    principal: [User, Machine, Ai],
    resource: [Entity, EntityType, PropertyType],
  };

  action createEntity in [create] appliesTo {
    principal: [User, Machine, Ai],
    resource: [Entity],
  };

  action createEntityType in [create] appliesTo {
    principal: [User, Machine, Ai],
    resource: [EntityType],
  };

  action createPropertyType in [create] appliesTo {
    principal: [User, Machine, Ai],
    resource: [PropertyType],
  };

  action viewEntity in [view] appliesTo {
    principal: [User, Machine, Ai, Public],
    resource: [Entity],
  };

  action viewEntityType in [view] appliesTo {
    principal: [User, Machine, Ai, Public],
    resource: [EntityType],
  };

  action viewPropertyType in [view] appliesTo {
    principal: [User, Machine, Ai, Public],
    resource: [PropertyType],
  };

  action updateEntity in [update] appliesTo {
    principal: [User, Machine, Ai],
    resource: [Entity],
  };

  action updateEntityType in [update] appliesTo {
    principal: [User, Machine, Ai],
    resource: [EntityType],
  };

  action updatePropertyType in [update] appliesTo {
    principal: [User, Machine, Ai],
    resource: [PropertyType],
  };

  action archiveEntity in [archive] appliesTo {
    principal: [User, Machine, Ai],
    resource: [Entity],
  };

  action archiveEntityType in [archive] appliesTo {
    principal: [User, Machine, Ai],
    resource: [EntityType],
  };

  action archivePropertyType in [archive] appliesTo {
    principal: [User, Machine, Ai],
    resource: [PropertyType],
  };

  action instantiate in [all] appliesTo {
    principal: [User, Machine, Ai],
    resource: [EntityType],
  };

  type ActorId = {
    type: String,
    id: String,
  };
}

namespace HASH::Team {
  entity Role in [HASH::Team] {
  };
}

namespace HASH::Web {
  entity Role in [HASH::Web] {
  };
}
