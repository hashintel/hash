Expr#0@37
  ExprKind (Let)
    LetExpr#1@37 (name: x:0)
      Expr#2@34
        ExprKind (Closure)
          ClosureExpr#3@34
            ClosureSignature#4@34
              Generics#5@12
              ClosureParam#6@20 (name: x:1)
                Type#7@19
                  TypeKind (Path)
                    Path#8@19 (rooted: true)
                      PathSegment#9@18 (name: kernel)
                      PathSegment#10@18 (name: type)
                      PathSegment#11@18 (name: Number)
              Type#12@24
                TypeKind (Infer)
            Expr#13@33
              ExprKind (Call)
                CallExpr#14@33
                  Expr#15@28
                    ExprKind (Path)
                      Path#16@28 (rooted: true)
                        PathSegment#17@27 (name: core)
                        PathSegment#18@27 (name: math)
                        PathSegment#19@27 (name: add)
                  Argument#20@30
                    Expr#21@30
                      ExprKind (Literal)
                        LiteralExpr#22@29
                          LiteralKind (Integer)
                            IntegerLiteral (1)
                  Argument#23@32
                    Expr#24@32
                      ExprKind (Literal)
                        LiteralExpr#25@31
                          LiteralKind (Integer)
                            IntegerLiteral (2)
      Expr#26@36
        ExprKind (Underscore)

------------------------
------------------------
------------------------

4 = fn(Number) -> _0