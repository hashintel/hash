[31m[type-extractor::duplicate-struct-field] Error:[0m Duplicate struct field
    â•­â”€[ <unknown>:8:7 ]
    â”‚
  8 â”‚       "field": "Number",
    â”‚       â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€  
    â”‚               â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Field `field` first defined here
    â”‚ 
 10 â”‚       "field": "String",
    â”‚       â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€  
    â”‚               â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ..., but was redefined here
    â”‚ 
    â”‚ Help: To fix this error, you can either:
    â”‚       1. Rename the duplicate `field` field to a different name, or
    â”‚       2. Remove the redundant field definition entirely if it's not needed
    â”‚ 
    â”‚ Note: Struct types in HashQL require that each field has a unique name. Having multiple fields with the same name would create ambiguity when accessing fields through dot notation or destructuring. The compiler enforces this constraint to ensure clear and predictable access patterns for struct data.
â”€â”€â”€â”€â•¯


[31m[type-extractor::duplicate-struct-field] Error:[0m Duplicate struct field
    â•­â”€[ <unknown>:11:7 ]
    â”‚
 11 â”‚       "another": "Boolean",
    â”‚       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€  
    â”‚                 â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Field `another` first defined here
    â”‚ 
 13 â”‚       "another": "Number",
    â”‚       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€  
    â”‚                â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ..., but was redefined here
    â”‚ 
    â”‚ Help: To fix this error, you can either:
    â”‚       1. Rename the duplicate `another` field to a different name, or
    â”‚       2. Remove the redundant field definition entirely if it's not needed
    â”‚ 
    â”‚ Note: Struct types in HashQL require that each field has a unique name. Having multiple fields with the same name would create ambiguity when accessing fields through dot notation or destructuring. The compiler enforces this constraint to ensure clear and predictable access patterns for struct data.
â”€â”€â”€â”€â•¯
