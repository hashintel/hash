#let add:0 = #fn<T:0?14>(a:0: ?14, b:0: ?14): ?14 ->
    ::math::add(a:0, b:0) in
add:0(1, 2)

--------------------------------------

#let add:0 = #fn<T:0?14>(a:0: ?14«?», b:0: ?14«?»): ?14«?» ->
    ::math::add(a:0, b:0) in
add:0(1, 2)

--------------------------------------

Node:
::math::add


Type:
fn<T?15: Number, U?16: Number>(?15«Number», ?16«Number») -> (?16«Number»
 | ?15«Number»)

--------------------------------------

Node:
a:0


Type:
?14«?»

--------------------------------------

Node:
b:0


Type:
?14«?»

--------------------------------------

Node:
::math::add(a:0, b:0)


Type:
_0«Number»

--------------------------------------

Node:
#fn<T:0?14>(a:0: ?14«?», b:0: ?14«?»): ?14«?» ->
    ::math::add(a:0, b:0)


Type:
fn<T:0?14>(?14«?», ?14«?») -> ?14«?»

--------------------------------------

Node:
add:0


Type:
fn<T:0?17>(?17«Integer», ?17«Integer») -> ?17«Integer»

--------------------------------------

Node:
1


Type:
Integer

--------------------------------------

Node:
2


Type:
Integer

--------------------------------------

Node:
add:0(1, 2)


Type:
_1«Integer»

--------------------------------------

Node:
#let add:0 = #fn<T:0?14>(a:0: ?14«?», b:0: ?14«?»): ?14«?» ->
    ::math::add(a:0, b:0) in
add:0(1, 2)


Type:
fn<T:0?14>(?14«?», ?14«?») -> ?14«?»