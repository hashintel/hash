[31m[type-check::incompatible-upper-equal-constraint] Error:[0m Incompatible upper bound and equality constraint
    â•­â”€[ <unknown>:6:3 ]
    â”‚
  1 â”‚       //@ run: fail
    â”‚       â”‚ 
    â”‚       â•°â”€ But this upper bound `[34mNumber[0m` is not a supertype of the equality constraint
    â”‚ 
  6 â”‚ â•­â”€â”€â”€â–¶   [
    â”‚ â”‚       â–²   
    â”‚ â”‚ â•­â”€â”€â”€â”€â”€â•¯   
    â”† â”† â”†   
 12 â”‚ â”œâ”€â”‚ â–¶   ],
    â”‚ â”‚ â”‚     â–²    
    â”‚ â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Type variable has incompatible equality and upper bound constraints
    â”‚   â”‚     â”‚    
    â”‚   â•°â”€â”€â”€â”€â”€â”´â”€â”€â”€â”€ Required to be exactly `[36m?[0m`
    â”‚       
    â”‚       Help: To fix this conflict, you can:
    â”‚             1. Change the equality constraint `[36m?[0m` to be a subtype of the upper bound
    â”‚             2. Adjust the upper bound `[34mNumber[0m` to be a supertype of the equality constraint
    â”‚             3. Review your type annotations to ensure they're consistent
    â”‚       
    â”‚       Note: Type inference requires that when a variable has both an equality constraint and an upper bound, the equality type must be a subtype of the upper bound (equal <: upper). This error indicates your code has contradictory requirements for the same type variable.
â”€â”€â”€â”€â•¯
