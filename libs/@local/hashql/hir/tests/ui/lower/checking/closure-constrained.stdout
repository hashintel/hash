════ Initial HIR ═══════════════════════════════════════════════════════════════

#let add:0 = #fn<T:0?26: Number>(a:0: ?26, b:0: ?26): ?26 ->
             ::core::math::add(a:0, b:0)
in
add:0(1, 2)

════ HIR after type checking ═══════════════════════════════════════════════════

#let add:0 = #fn<T:0?29: Number>(a:0: ?29, b:0: ?29): ?29 ->
             ::core::math::add(a:0, b:0)
in
add:0(1, 2)

════ Types ═════════════════════════════════════════════════════════════════════

┌─ #let add:0 = #fn<T:0?29: Number>(a:0: ?29, b:0: ?29): ?29 ->
│               ::core::math::add(a:0, b:0)
│  in
│  add:0(1, 2)
└→ Integer

┌─ #fn<T:0?29: Number>(a:0: ?29, b:0: ?29): ?29 ->
│      ::core::math::add(a:0, b:0)
└→ fn<T:0?29: Number>(?29, ?29) -> ?29

┌─ ::core::math::add(a:0, b:0)
└→ Number

┌─ ::core::math::add
└→ fn(Number, Number) -> Number

┌─ a:0
└→ Number

┌─ b:0
└→ Number

┌─ add:0(1, 2)
└→ Integer

┌─ add:0
└→ fn(Integer, Integer) -> Integer

┌─ 1
└→ Integer

┌─ 2
└→ Integer

