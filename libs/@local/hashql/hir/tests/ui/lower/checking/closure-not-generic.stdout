════ Initial HIR ═══════════════════════════════════════════════════════════════

#let add:0 = #fn(a:0: Number, b:0: Number): Number ->
    ::core::math::add(a:0, b:0) in
add:0(1, 2)

════ HIR after type checking ═══════════════════════════════════════════════════

#let add:0 = #fn(a:0: Number, b:0: Number): Number ->
    ::core::math::add(a:0, b:0) in
add:0(1, 2)

════ Types ═════════════════════════════════════════════════════════════════════

┌─ ::core::math::add
└→ fn(Number, Number) -> Number

┌─ a:0
└→ Number

┌─ b:0
└→ Number

┌─ ::core::math::add(a:0, b:0)
└→ Number

┌─ #fn(a:0: Number, b:0: Number): Number ->
│      ::core::math::add(a:0, b:0)
└→ fn(Number, Number) -> Number

┌─ add:0
└→ fn(Number, Number) -> Number

┌─ 1
└→ Integer

┌─ 2
└→ Integer

┌─ add:0(1, 2)
└→ Number

┌─ #let add:0 = #fn(a:0: Number, b:0: Number): Number ->
│      ::core::math::add(a:0, b:0) in
│  add:0(1, 2)
└→ Number

