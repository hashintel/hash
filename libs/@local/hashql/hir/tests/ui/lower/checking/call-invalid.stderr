[31m[type-check::bound-constraint-violation] Error:[0m Type bound constraint violation
   â•­â”€[ <unknown>:1:1 ]
   â”‚
 1 â”‚ //@ run: fail
   â”‚ â”‚ 
   â”‚ â•°â”€ Type variable has incompatible upper and lower bounds
   â”‚ â”‚ 
   â”‚ â•°â”€ Upper bound `[34mNumber[0m` is not a supertype of the lower bound
   â”‚ 
 3 â”‚ ["+", { "#literal": 42.12 }, { "#literal": "42" }]
   â”‚                                            â”€â”€â”¬â”€  
   â”‚                                              â•°â”€â”€â”€ Lower bound `[34mString[0m` must be a subtype of the upper bound
   â”‚ 
   â”‚ Help: These type bounds create an impossible constraint. To fix this:
   â”‚       1. Modify `[34mString[0m` to be a proper subtype of `[34mNumber[0m`
   â”‚       2. Or adjust `[34mNumber[0m` to be a supertype of `[34mString[0m`
   â”‚       3. Or check your code for contradictory type assertions
   â”‚ 
   â”‚ Note: During type inference, when a variable has both upper and lower bounds, the relationship 'lower <: upper' must hold. This ensures a valid solution exists in the type system. When this relationship is violated, it means your code is requiring contradictory types for the same variable.
â”€â”€â”€â•¯
