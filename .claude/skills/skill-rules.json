{
  "version": "1.0",
  "description": "Skill activation triggers for HASH Claude Code. Controls when skills automatically suggest or block actions.",
  "skills": {
    "rust-error-stack": {
      "type": "domain",
      "enforcement": "suggest",
      "priority": "high",
      "description": "Error handling patterns using error-stack crate for HASH Rust code",
      "promptTriggers": {
        "keywords": [
          "error handling",
          "error",
          "Result",
          "Report",
          "attach",
          "change_context",
          "error type",
          "define error",
          "propagate error",
          "error documentation",
          "fehler",
          "fehlerbehandlung",
          "fehler behandeln",
          "fehler definieren",
          "fehler propagieren"
        ],
        "intentPatterns": [
          "\\b(handle|create|define|propagate)\\b.*?\\berror\\b",
          "\\berror(s)?\\b.*?\\b(handling|propagation|definition|documentation)\\b",
          "Result.*?Report"
        ]
      }
    },
    "cargo-dependencies": {
      "type": "domain",
      "enforcement": "suggest",
      "priority": "high",
      "description": "Cargo.toml dependency management patterns for HASH workspace",
      "promptTriggers": {
        "keywords": [
          "cargo",
          "dependency",
          "dependencies",
          "Cargo.toml",
          "crate",
          "workspace dependency",
          "add dependency",
          "add crate",
          "public dependency",
          "dev-dependencies",
          "crate hinzufügen",
          "dependency hinzufügen"
        ],
        "intentPatterns": [
          "\\badd\\b.*?\\b(dependency|dependencies|crate)\\b",
          "\\b(cargo|Cargo\\.toml)\\b.*?\\b(dependency|dependencies)\\b",
          "\\bworkspace\\b.*?\\bdependenc(y|ies)\\b"
        ]
      }
    },
    "writing-skills": {
      "type": "domain",
      "enforcement": "suggest",
      "priority": "high",
      "description": "Meta-skill for creating and managing Claude Code skills in HASH repository",
      "promptTriggers": {
        "keywords": [
          "skill system",
          "create skill",
          "add skill",
          "new skill",
          "skill triggers",
          "skill rules",
          "skill-rules.json",
          "hook system",
          "skill development",
          "skill activation",
          "skill configuration",
          "SKILL.md",
          "skill best practices"
        ],
        "intentPatterns": [
          "\\b(how do|how does|explain)\\b.*?\\bskill\\b",
          "\\b(create|add|modify|build)\\b.*?\\bskill\\b",
          "\\bskill\\b.*?\\b(work|trigger|activate|system|structure|template|pattern|configuration)\\b",
          "\\b(configure|setup|define)\\b.*?\\bskill\\b.*?\\b(trigger|activation|rule)\\b"
        ]
      }
    },
    "rust-documentation": {
      "type": "domain",
      "enforcement": "suggest",
      "priority": "high",
      "description": "Rust documentation practices for HASH codebase following rustdoc conventions",
      "promptTriggers": {
        "keywords": [
          "rust documentation",
          "doc comment",
          "doc comments",
          "rustdoc",
          "document rust",
          "documenting rust",
          "intra-doc link",
          "intra-doc links",
          "# Errors",
          "# Examples",
          "# Panics",
          "function documentation",
          "type documentation",
          "trait documentation",
          "module documentation"
        ],
        "intentPatterns": [
          "\\b(write|add|create|update)\\b.*?\\b(doc|documentation)\\b.*?\\b(rust|function|type|trait|module)\\b",
          "\\b(document|documenting)\\b.*?\\b(function|type|struct|enum|trait|module|error)\\b",
          "\\bhow\\b.*?\\b(document|write docs)\\b.*?\\brust\\b"
        ]
      }
    }
  },
  "notes": {
    "enforcement_types": {
      "suggest": "Skill suggestion appears but doesn't block execution",
      "block": "Requires skill to be used before proceeding (guardrail)",
      "warn": "Shows warning but allows proceeding"
    },
    "priority_levels": {
      "critical": "Highest - Always trigger when matched",
      "high": "Important - Trigger for most matches",
      "medium": "Moderate - Trigger for clear matches",
      "low": "Optional - Trigger only for explicit matches"
    },
    "customization": {
      "pathPatterns": "Adjust to match HASH project structure (libs/@local, apps/hash-*, etc.)",
      "keywords": "Add domain-specific terms relevant to HASH",
      "intentPatterns": "Use regex for flexible user intent matching"
    }
  }
}
